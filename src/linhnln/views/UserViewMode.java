/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package linhnln.views;

import java.sql.Timestamp;
import java.util.Calendar;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import linhnln.dtos.DeviceDTO;
import linhnln.dtos.MaintainanceDTO;
import linhnln.models.DeviceDAO;
import linhnln.models.MaintainanceDAO;
import mdlaf.MaterialLookAndFeel;
import linhnln.logger.LogFileText;

/**
 *
 * @author Liam Nguyen
 */
public class UserViewMode extends javax.swing.JFrame {
    private DefaultTableModel tblModelDevice = null;
    /**
     * Creates new form UserMode
     */
    public UserViewMode() {
        initComponents();
        lbUserView.setHorizontalAlignment(JLabel.CENTER);
        tblModelDevice = (DefaultTableModel) tblViewDevice.getModel();
        this.setLocation(400, 300);
        showAllDevice();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbUserView = new javax.swing.JLabel();
        lbDevice = new javax.swing.JLabel();
        lbDevice1 = new javax.swing.JLabel();
        btSearch = new javax.swing.JButton();
        txtDevID = new javax.swing.JTextField();
        txtEmpID = new javax.swing.JTextField();
        lbDevice2 = new javax.swing.JLabel();
        btRequire = new javax.swing.JButton();
        btNew = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewDevice = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtRequirementContent = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        lbUserView.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lbUserView.setForeground(new java.awt.Color(255, 43, 84));
        lbUserView.setText("Device Management");

        lbDevice.setText("EmployeeID: ");

        lbDevice1.setText("DeviceID: ");

        btSearch.setText("Search");
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });

        lbDevice2.setText("Requirement:");

        btRequire.setText("Require");
        btRequire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRequireActionPerformed(evt);
            }
        });

        btNew.setText("New");
        btNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNewActionPerformed(evt);
            }
        });

        tblViewDevice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DeviceID", "Description", "DeviceName"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblViewDevice);
        if (tblViewDevice.getColumnModel().getColumnCount() > 0) {
            tblViewDevice.getColumnModel().getColumn(0).setMinWidth(50);
            tblViewDevice.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        txtRequirementContent.setColumns(20);
        txtRequirementContent.setRows(5);
        jScrollPane2.setViewportView(txtRequirementContent);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbDevice)
                            .addComponent(lbDevice1)
                            .addComponent(lbDevice2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btSearch)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btRequire))
                    .addComponent(txtDevID, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(txtEmpID, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbUserView)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btNew, btRequire, btSearch});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lbUserView)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbDevice)
                            .addComponent(txtEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbDevice1)
                            .addComponent(txtDevID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lbDevice2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btSearch)
                            .addComponent(btNew)
                            .addComponent(btRequire))
                        .addGap(14, 14, 14))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(41, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showAllDevice() {
        try {
            DeviceDAO dao = new DeviceDAO();
            List<DeviceDTO> dto = dao.getAllListDevice();
            viewAllDevice(dto);
        } catch (Exception e) {
//            e.printStackTrace();
            LogFileText.writeToLogFile("UserViewMode", e.getMessage());
        }
        
    }
    
    private void viewAllDevice(List<DeviceDTO> dto) {
        tblModelDevice.setRowCount(0);
        for (DeviceDTO deviceDTO : dto) {
            tblModelDevice.addRow(deviceDTO.toVector());
        }
    }
    
    
    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
        // TODO add your handling code here:
        
        DeviceDTO dto = null;
        String invalid = "";
        int searchID = 0;

        try {
            searchID = Integer.parseInt(txtDevID.getText());
            if (searchID < 1) throw new Exception("ID is start from 1!");
        } catch (Exception e) {
//            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage()); 
            LogFileText.writeToLogFile("UserViewMode", e.getMessage() + " Search ID");
            invalid += "ID is an integer";
        }

        if (invalid.equals("")) {
            try {
                DeviceDAO dao = new DeviceDAO();
                dto = dao.findByPrimaryKey(searchID);
                showDeviceSearchByID(dto);
            } catch (Exception e) {
//                e.printStackTrace();
                LogFileText.writeToLogFile("UserViewMode", e.getMessage());
                if (dto == null) JOptionPane.showMessageDialog(this, "ID not found!");
                else JOptionPane.showMessageDialog(this, e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, invalid);
        }
    }//GEN-LAST:event_btSearchActionPerformed

    private void btNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNewActionPerformed
        // TODO add your handling code here:
        txtEmpID.setText("");
        txtDevID.setText("");
        txtRequirementContent.setText("");
        showAllDevice();
    }//GEN-LAST:event_btNewActionPerformed

    private void btRequireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRequireActionPerformed
        // TODO add your handling code here:
        //requirementTime => current when user input
        //result => default is "required"
        
        MaintainanceDTO dto = null;
        Integer empID = 0;
        Integer devID = 0;
        //get data from view
        
        try {
            empID = Integer.parseInt(txtEmpID.getText());
            if (empID < 1) throw new Exception("Id Must start from 1");
        } catch (NumberFormatException e) {
//            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage() + ",empID must be an integer");
            LogFileText.writeToLogFile("UserViewMode", e.getMessage());
        } catch (Exception ex) {
//            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "ID must start from 1");
            LogFileText.writeToLogFile("UserViewMode", ex.getMessage());
        }
        
        try {
            devID = Integer.parseInt(txtDevID.getText());
            if (devID < 1) throw new Exception("ID must start from 1");
        } catch (NumberFormatException e) {
//            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage() + ",ID must be an integer");
            LogFileText.writeToLogFile("UserViewMode", e.getMessage());
        } catch (Exception ex) {
//            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "ID must start from 1");
            LogFileText.writeToLogFile("UserViewMode", ex.getMessage());
        }
        
        String requirementContent = txtRequirementContent.getText();

        
        //validate
        String invalid = "";
        
        if (requirementContent.length() == 0) invalid += "requirementContent can't be blank" + "\n";
        
        //operation
        if (invalid.equals("")) {
            dto = new MaintainanceDTO(empID, devID, requirementContent);
            dto.setResult("required");
            //Timestamp
            Calendar cal = Calendar.getInstance();
            Timestamp time = new Timestamp(cal.getTimeInMillis());
//            System.out.println(time); ////test
            dto.setRequirementTime(time);
        } else {
            JOptionPane.showMessageDialog(this, invalid);
        }
        
        try {
            MaintainanceDAO dao = new MaintainanceDAO();
            
            if (dao.insert(dto)) {
                JOptionPane.showMessageDialog(this, "Require sucess");
            } else {
                JOptionPane.showMessageDialog(this, "Require failed");
            }
            
        } catch (Exception e) {
//            e.printStackTrace();
            //khong can validate vi da cho chay ID cua tblMaintainance tu dong
            if (e.getMessage().contains("column 'EmpID'")) {
                JOptionPane.showMessageDialog(this, empID + " is not existed");
            } 
            if (e.getMessage().contains("Null")) {
                JOptionPane.showMessageDialog(this, devID + " is not existed");
            } else {
                JOptionPane.showMessageDialog(this, "Something wrong with your input, please check your ID again");
            }
            
            LogFileText.writeToLogFile("UserViewMode", e.getMessage());
        }
    }//GEN-LAST:event_btRequireActionPerformed
    
    private void showDeviceSearchByID(DeviceDTO dto) throws Exception {
        tblModelDevice.setRowCount(0);
        tblModelDevice.addRow(dto.toVector());
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserViewMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserViewMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserViewMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserViewMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel (new MaterialLookAndFeel ());
		}
		catch (UnsupportedLookAndFeelException e) {
//			e.printStackTrace ();
                        LogFileText.writeToLogFile("UserViewMode", e.getMessage());
		}
                new UserViewMode().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btNew;
    private javax.swing.JButton btRequire;
    private javax.swing.JButton btSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbDevice;
    private javax.swing.JLabel lbDevice1;
    private javax.swing.JLabel lbDevice2;
    private javax.swing.JLabel lbUserView;
    private javax.swing.JTable tblViewDevice;
    private javax.swing.JTextField txtDevID;
    private javax.swing.JTextField txtEmpID;
    private javax.swing.JTextArea txtRequirementContent;
    // End of variables declaration//GEN-END:variables
}
